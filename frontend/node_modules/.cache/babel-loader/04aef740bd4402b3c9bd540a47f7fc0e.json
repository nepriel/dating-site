{"ast":null,"code":"import axios from \"axios/index\";\nimport { FETCH_ALL_USERS_PUBLIC_DATA } from '../ActionType';\n\nfunction deg2rad(deg) {\n  return deg * (Math.PI / 180);\n}\n\nfunction getDistanceFromLatLonInKm(lat1, lon1, lat2, lon2) {\n  var R = 6371; // Radius of the earth in km\n\n  var dLat = deg2rad(lat2 - lat1); // deg2rad below\n\n  var dLon = deg2rad(lon2 - lon1);\n  var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var d = R * c; // Distance in km\n\n  return d;\n}\n\nfunction CalculateDistance(userPos, userList) {\n  var distance_array = [];\n  var userXY = userPos.split(',');\n  var elementXY = [];\n  var dist = 0;\n  userList.forEach(element => {\n    elementXY = element.localisation.split(',');\n    dist = getDistanceFromLatLonInKm(userXY[0], userXY[1], elementXY[0], elementXY[1]);\n    distance_array[element.id] = {\n      id: element.id,\n      dist: dist\n    };\n  });\n  return distance_array;\n}\n\nfunction filter_fame(userList, rangeFame) {\n  var id_list = [];\n  userList.forEach(element => {\n    if (parseInt(element.fame) >= parseInt(rangeFame)) {\n      id_list.push(element.id);\n    }\n  });\n  return id_list;\n}\n\nfunction filter_age(userList, age) {\n  var id_list = [];\n  userList.forEach(element => {\n    if (parseInt(element.age) >= parseInt(age[0]) && parseInt(element.age) <= parseInt(age[1])) {\n      id_list.push(element.id);\n    }\n  });\n  return id_list;\n}\n\nfunction filter_tags(userList, tags) {\n  var id_list = [];\n\n  if (tags.length === 0) {\n    userList.forEach(element => {\n      id_list.push(element.id);\n    });\n  } else {\n    userList.forEach(element => {\n      element.tags.forEach(tag => {\n        tags.forEach(filter_tag => {\n          if (filter_tag === tag) {\n            id_list.push(element.id);\n          }\n        });\n      });\n    });\n  }\n\n  return id_list;\n}\n\nfunction filter_dist(array, dist) {\n  var id_list = [];\n  array.forEach(element => {\n    if (element.dist <= dist) {\n      id_list.push(element.id);\n    }\n  });\n  return id_list;\n}\n\nfunction intersection() {\n  var result = [];\n  var lists;\n\n  if (arguments.length === 1) {\n    lists = arguments[0];\n  } else {\n    lists = arguments;\n  }\n\n  for (var i = 0; i < lists.length; i++) {\n    var currentList = lists[i];\n\n    for (var y = 0; y < currentList.length; y++) {\n      var currentValue = currentList[y];\n\n      if (result.indexOf(currentValue) === -1) {\n        var existsInAll = true;\n\n        for (var x = 0; x < lists.length; x++) {\n          if (lists[x].indexOf(currentValue) === -1) {\n            existsInAll = false;\n            break;\n          }\n        }\n\n        if (existsInAll) {\n          result.push(currentValue);\n        }\n      }\n    }\n  }\n\n  return result;\n}\n\nasync function applyFilteronUser(usersList, filter) {\n  return new Promise((resolve, reject) => {\n    // console.log(\"User list : \", usersList);\n    // console.log(\"filter :\", filter);\n    var tag_array = [];\n\n    if (filter[0].interests !== null) {\n      filter[0].interests.forEach(element => {\n        tag_array.push(element.value);\n      });\n    }\n\n    if (usersList.code === 200) {\n      var filteredUser = [];\n      var IdsFilteredByFame = filter_fame(usersList.data, filter[0].rangeFame);\n      var IdsFilteredByAge = filter_age(usersList.data, filter[0].age);\n      var IdsFilteredByTags = filter_tags(usersList.data, tag_array);\n      var UserDists = CalculateDistance(filter[0].userPos, usersList.data);\n      var IdsFilteredByDist = filter_dist(UserDists, filter[0].rangeLocalisation);\n      var IdsFiltered = intersection(IdsFilteredByFame, IdsFilteredByAge, IdsFilteredByTags, IdsFilteredByDist);\n      usersList.data.forEach(element => {\n        IdsFiltered.forEach(id => {\n          if (parseInt(element.id) === parseInt(id)) {\n            filteredUser.push(element);\n          }\n        });\n      });\n      resolve(filteredUser);\n    } else {\n      resolve([]);\n    }\n  });\n}\n\nasync function IdsFilteredBySexefunc(userList, wants) {\n  var id_list = []; // console.log(wants);\n\n  if (wants === 'B') {\n    userList.forEach(element => id_list.push(element.id));\n  } else {\n    userList.forEach(element => {\n      if (element.gender === wants) {\n        id_list.push(element.id);\n      }\n    });\n  }\n\n  return id_list;\n}\n\nasync function IdsThatAreInA6000KmRadiusfunc(array, dist) {\n  var id_list = [];\n  array.forEach(element => {\n    if (element.dist <= dist) {\n      id_list.push(element.id);\n    }\n  });\n  return id_list;\n}\n\nasync function IdsTharAreInA30FameRadiusfunc(userList, rangeFame) {\n  var id_list = [];\n  var minRange = parseInt(rangeFame) - 30;\n  var maxRange = parseInt(rangeFame) + 30;\n  userList.forEach(element => {\n    if (parseInt(element.fame) > minRange && parseInt(element.fame) < maxRange) {\n      id_list.push(element.id);\n    }\n  });\n  return id_list;\n}\n\nasync function applySuggestiononUsers(userList, filter) {\n  return new Promise(async (resolve, reject) => {\n    if (userList.code === 200) {\n      // console.log(userList.data);\n      // console.log(filter);\n      var filteredUser = [];\n      let IdsFilteredBySexe = await IdsFilteredBySexefunc(userList.data, filter.wants); // console.log(IdsFilteredBySexe);\n\n      var UserDists = CalculateDistance(filter.location, userList.data); // console.log(UserDists);\n\n      let IdsThatAreInA6000KmRadius = await IdsThatAreInA6000KmRadiusfunc(UserDists, 10000); // console.log(IdsThatAreInA6000KmRadius);\n\n      let IdsThatHaveAtLeast1TaginCommon = filter_tags(userList.data, filter.tags); // console.log(IdsThatHaveAtLeast1TaginCommon);\n\n      let IdsTharAreInA30FameRadius = await IdsTharAreInA30FameRadiusfunc(userList.data, filter.fame); // console.log(IdsTharAreInA30FameRadius);\n\n      var IdsFiltered = intersection(IdsFilteredBySexe, IdsThatAreInA6000KmRadius, IdsThatHaveAtLeast1TaginCommon, IdsTharAreInA30FameRadius); // console.log('result', IdsFiltered);\n\n      userList.data.forEach(element => {\n        IdsFiltered.forEach(id => {\n          if (parseInt(element.id) === parseInt(id)) {\n            UserDists.forEach(dist => {\n              if (dist.id === element.id) {\n                element.distance = dist.dist;\n              }\n            });\n            filteredUser.push(element);\n          }\n        });\n      });\n      resolve(filteredUser);\n    } else {\n      resolve([]);\n    }\n  });\n}\n\nasync function AddDistance(userList) {\n  return new Promise(async (resolve, reject) => {\n    if (userList.code === 200) {\n      var UserDists = CalculateDistance('48.8543,2.3527', userList.data);\n      userList.data.forEach(element => {\n        UserDists.forEach(dist => {\n          if (dist.id === element.id) {\n            element.distance = dist.dist;\n          }\n        });\n      });\n      resolve(userList.data);\n    } else {\n      resolve([]);\n    }\n  });\n}\n\nasync function UsersPublicData(filter, token, userId, dispatch) {\n  axios.get(process.env.REACT_APP_API_URL + \"/users/publicData/\" + userId, {\n    headers: {\n      \"Authorization\": \"Bearer \".concat(token)\n    }\n  }).then(async results => {\n    if (filter.length === 0) dispatch({\n      type: FETCH_ALL_USERS_PUBLIC_DATA,\n      payload: {\n        data: await AddDistance(results.data),\n        code: 200\n      }\n    });else {\n      if (filter.hasOwnProperty('Suggestion')) {\n        dispatch({\n          type: FETCH_ALL_USERS_PUBLIC_DATA,\n          payload: {\n            data: await applySuggestiononUsers(results.data, filter),\n            code: 200\n          }\n        });\n      } else {\n        dispatch({\n          type: FETCH_ALL_USERS_PUBLIC_DATA,\n          payload: {\n            data: await applyFilteronUser(results.data, filter),\n            code: 200\n          }\n        });\n      }\n    }\n  }).catch(err => {\n    dispatch({\n      type: FETCH_ALL_USERS_PUBLIC_DATA,\n      payload: false\n    });\n  });\n}\n\nexport function fetchAllUsersPublicData(filter) {\n  const token = localStorage.getItem(\"token\");\n  const userId = localStorage.getItem(\"userId\");\n  return async function (dispatch) {\n    await UsersPublicData(filter, token, userId, dispatch);\n  };\n}","map":{"version":3,"sources":["/usr/src/app/src/store/actions/UsersActions/fetchAllUsersPublicDataAction.js"],"names":["axios","FETCH_ALL_USERS_PUBLIC_DATA","deg2rad","deg","Math","PI","getDistanceFromLatLonInKm","lat1","lon1","lat2","lon2","R","dLat","dLon","a","sin","cos","c","atan2","sqrt","d","CalculateDistance","userPos","userList","distance_array","userXY","split","elementXY","dist","forEach","element","localisation","id","filter_fame","rangeFame","id_list","parseInt","fame","push","filter_age","age","filter_tags","tags","length","tag","filter_tag","filter_dist","array","intersection","result","lists","arguments","i","currentList","y","currentValue","indexOf","existsInAll","x","applyFilteronUser","usersList","filter","Promise","resolve","reject","tag_array","interests","value","code","filteredUser","IdsFilteredByFame","data","IdsFilteredByAge","IdsFilteredByTags","UserDists","IdsFilteredByDist","rangeLocalisation","IdsFiltered","IdsFilteredBySexefunc","wants","gender","IdsThatAreInA6000KmRadiusfunc","IdsTharAreInA30FameRadiusfunc","minRange","maxRange","applySuggestiononUsers","IdsFilteredBySexe","location","IdsThatAreInA6000KmRadius","IdsThatHaveAtLeast1TaginCommon","IdsTharAreInA30FameRadius","distance","AddDistance","UsersPublicData","token","userId","dispatch","get","process","env","REACT_APP_API_URL","headers","then","results","type","payload","hasOwnProperty","catch","err","fetchAllUsersPublicData","localStorage","getItem"],"mappings":"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","sourcesContent":["import axios from \"axios/index\";\n\nimport {\n    FETCH_ALL_USERS_PUBLIC_DATA\n} from '../ActionType';\n\nfunction deg2rad(deg) {\n    return deg * (Math.PI/180)\n}\n\nfunction getDistanceFromLatLonInKm(lat1, lon1, lat2, lon2) {\n    var R = 6371; // Radius of the earth in km\n    var dLat = deg2rad(lat2-lat1);  // deg2rad below\n    var dLon = deg2rad(lon2-lon1); \n    var a = \n      Math.sin(dLat/2) * Math.sin(dLat/2) +\n      Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * \n      Math.sin(dLon/2) * Math.sin(dLon/2)\n      ; \n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \n    var d = R * c; // Distance in km\n    return d;\n  }\n\nfunction CalculateDistance (userPos, userList){\n\n    var distance_array = [];\n    var userXY = userPos.split(',');\n    var elementXY = [];\n    var dist = 0;\n\n    userList.forEach(element => {\n        elementXY = element.localisation.split(',');\n        dist = getDistanceFromLatLonInKm(userXY[0], userXY[1], elementXY[0], elementXY[1]);\n        distance_array[element.id] = {\n            id: element.id,\n            dist: dist\n        }\n    });\n\n    return(distance_array);\n}\n\nfunction filter_fame (userList, rangeFame) {\n    var id_list = [];\n    userList.forEach(element => {\n        if (parseInt(element.fame) >= parseInt(rangeFame)) {\n            id_list.push(element.id);\n        }  \n    });\n    return (id_list)\n} \n\nfunction filter_age (userList, age) {\n    var id_list = [];\n    userList.forEach(element => {\n        if (parseInt(element.age) >= parseInt(age[0]) && parseInt(element.age) <= parseInt(age[1])) {\n            id_list.push(element.id);\n        }  \n    });\n    return (id_list)\n}\n\nfunction filter_tags (userList, tags) {\n    var id_list = [];\n    if (tags.length === 0){\n        userList.forEach(element => {\n            id_list.push(element.id);\n        })\n    } else {\n        userList.forEach(element => {\n            element.tags.forEach(tag => {\n                tags.forEach(filter_tag => {\n                    if (filter_tag === tag){\n                        id_list.push(element.id);\n                    }\n                })\n            })\n        });\n    }\n    return (id_list)\n}\n\nfunction filter_dist (array, dist){\n    var id_list = [];\n    array.forEach(element => {\n        if (element.dist <= dist){\n            id_list.push(element.id);\n        }\n    });\n    return(id_list);\n}\n\nfunction intersection() {\n    var result = [];\n    var lists;\n  \n    if(arguments.length === 1) {\n      lists = arguments[0];\n    } else {\n      lists = arguments;\n    }\n  \n    for(var i = 0; i < lists.length; i++) {\n      var currentList = lists[i];\n      for(var y = 0; y < currentList.length; y++) {\n          var currentValue = currentList[y];\n        if(result.indexOf(currentValue) === -1) {\n          var existsInAll = true;\n          for(var x = 0; x < lists.length; x++) {\n            if(lists[x].indexOf(currentValue) === -1) {\n              existsInAll = false;\n              break;\n            }\n          }\n          if(existsInAll) {\n            result.push(currentValue);\n          }\n        }\n      }\n    }\n    return result;\n  }\n\nasync function applyFilteronUser(usersList, filter) {\n    return new Promise((resolve, reject) => {\n        // console.log(\"User list : \", usersList);\n        // console.log(\"filter :\", filter);\n        var tag_array = [];\n        if (filter[0].interests !== null){\n            filter[0].interests.forEach(element => {\n                tag_array.push(element.value);\n            });\n        }\n\n        if (usersList.code === 200){\n            var filteredUser = [];\n\n            var IdsFilteredByFame = filter_fame(usersList.data, filter[0].rangeFame)\n            var IdsFilteredByAge = filter_age(usersList.data, filter[0].age)\n            var IdsFilteredByTags = filter_tags(usersList.data, tag_array)\n            \n            var UserDists = CalculateDistance(filter[0].userPos, usersList.data);\n\n            var IdsFilteredByDist = filter_dist(UserDists, filter[0].rangeLocalisation)\n\n            var IdsFiltered = intersection(IdsFilteredByFame, IdsFilteredByAge, IdsFilteredByTags, IdsFilteredByDist);\n\n            usersList.data.forEach(element => {\n                IdsFiltered.forEach(id => {\n                    if (parseInt(element.id) === parseInt(id)) {\n                        filteredUser.push(element);\n                    }\n                });\n            });\n            resolve(filteredUser);\n        } else {\n            resolve([]);\n        }\n    })\n}\n\nasync function IdsFilteredBySexefunc(userList, wants){\n    var id_list = [];\n    // console.log(wants);\n    if (wants === 'B'){\n        userList.forEach(element => id_list.push(element.id));\n    } else {\n        userList.forEach(element => {\n            if (element.gender === wants) {\n                id_list.push(element.id);\n            }  \n        });\n    }\n    return (id_list)\n}\n\nasync function IdsThatAreInA6000KmRadiusfunc(array, dist) {\n    var id_list = [];\n    array.forEach(element => {\n        if (element.dist <= dist){\n            id_list.push(element.id);\n        }\n    });\n    return(id_list);\n}\n\nasync function IdsTharAreInA30FameRadiusfunc(userList, rangeFame){\n    var id_list = [];\n    var minRange = parseInt(rangeFame) - 30;\n    var maxRange = parseInt(rangeFame) + 30;\n    userList.forEach(element => {\n        if (parseInt(element.fame) > minRange && parseInt(element.fame) < maxRange) {\n            id_list.push(element.id);\n        }  \n    });\n    return (id_list)\n}\n\nasync function applySuggestiononUsers(userList, filter){\n    return new Promise(async (resolve, reject) => {\n        if (userList.code === 200) {\n            // console.log(userList.data);\n            // console.log(filter);\n            var filteredUser = [];\n\n            let IdsFilteredBySexe = await IdsFilteredBySexefunc(userList.data, filter.wants);\n            // console.log(IdsFilteredBySexe);\n\n            var UserDists = CalculateDistance(filter.location, userList.data);\n            // console.log(UserDists);\n\n            let IdsThatAreInA6000KmRadius = await IdsThatAreInA6000KmRadiusfunc(UserDists, 10000);\n            // console.log(IdsThatAreInA6000KmRadius);\n            let IdsThatHaveAtLeast1TaginCommon = filter_tags(userList.data, filter.tags);\n            // console.log(IdsThatHaveAtLeast1TaginCommon);\n            let IdsTharAreInA30FameRadius = await IdsTharAreInA30FameRadiusfunc(userList.data, filter.fame);\n            // console.log(IdsTharAreInA30FameRadius);\n\n            var IdsFiltered = intersection(IdsFilteredBySexe, IdsThatAreInA6000KmRadius, IdsThatHaveAtLeast1TaginCommon, IdsTharAreInA30FameRadius);\n            // console.log('result', IdsFiltered);\n            \n            userList.data.forEach(element => {\n                IdsFiltered.forEach(id => {\n                    if (parseInt(element.id) === parseInt(id)) {\n                        UserDists.forEach(dist => {\n                            if (dist.id === element.id){\n                                element.distance = dist.dist;\n                            }\n                        });\n                        filteredUser.push(element);\n                    }\n                });\n            });\n            resolve(filteredUser)\n        } else {\n            resolve([]);\n        }\n    })\n}\n\nasync function AddDistance(userList) {\n    return new Promise(async (resolve, reject) => {\n        if (userList.code === 200) {\n            var UserDists = CalculateDistance('48.8543,2.3527', userList.data);\n\n            userList.data.forEach(element => {\n                UserDists.forEach(dist => {\n                    if(dist.id === element.id) {\n                        element.distance = dist.dist;\n                    }\n                });\n            })\n            resolve(userList.data);\n        } else {\n            resolve([]);\n        }\n    })\n}\n\nasync function UsersPublicData(filter, token, userId, dispatch) {\n    axios.get(process.env.REACT_APP_API_URL + \"/users/publicData/\" + userId, {\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    })\n        .then(async results => {\n            if (filter.length === 0)\n                dispatch({\n                    type: FETCH_ALL_USERS_PUBLIC_DATA,\n                    payload: {\n                        data: await AddDistance(results.data),\n                        code: 200\n                    }\n                })\n            else {\n                if (filter.hasOwnProperty('Suggestion') ){\n                    dispatch({\n                        type: FETCH_ALL_USERS_PUBLIC_DATA,\n                        payload: {\n                            data: await applySuggestiononUsers(results.data, filter),\n                            code: 200\n                        }\n                    })\n                } else {\n                    dispatch({\n                        type: FETCH_ALL_USERS_PUBLIC_DATA,\n                        payload: {\n                            data: await applyFilteronUser(results.data, filter),\n                            code: 200\n                        }\n                    })\n                }\n            }\n\n        })\n        .catch(err => {\n            dispatch({\n                type: FETCH_ALL_USERS_PUBLIC_DATA,\n                payload: false\n            })\n        })\n}\n\nexport function fetchAllUsersPublicData(filter) {\n    const token = localStorage.getItem(\"token\");\n    const userId = localStorage.getItem(\"userId\");\n\n    return async function (dispatch) {\n        await UsersPublicData(filter, token, userId, dispatch);\n    }\n}"]},"metadata":{},"sourceType":"module"}