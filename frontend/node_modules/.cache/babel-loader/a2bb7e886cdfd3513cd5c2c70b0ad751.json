{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/components/pages/ResetPwd/ResetPwd.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { push } from \"react-router-redux\";\nimport { ResetPwdUser } from \"../../../store/actions/UsersActions/ResetPwdAction\";\nimport { ToastContainer } from 'react-toastify';\n\nconst customNotification = require('../utils/notification');\n\nclass ResetPwd extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handlFormSubmit = this.handlFormSubmit.bind(this);\n  }\n\n  handlFormSubmit(e) {\n    e.preventDefault();\n    this.props.onResetPwdUser(this.state.email);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.resetPwd.code === 200) customNotification.fireNotification(\"success\", nextProps.resetPwd.msg);\n    if (nextProps.resetPwd !== \"\" && nextProps.resetPwd.code === 205) customNotification.fireNotification(\"warning\", nextProps.resetPwd.msg);\n    if (nextProps.resetPwd !== \"\" && nextProps.resetPwd.code === 500) customNotification.fireNotification(\"error\", nextProps.resetPwd.msg);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"login-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"login-logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Forget password\")), React.createElement(\"div\", {\n      className: \"login-box-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"login-box-msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Reinitialize your password\", React.createElement(Link, {\n      to: \"/login\",\n      onClick: this.props.navigateTo.bind(this, '/login'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-backward pull-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), \"Signup a new account\"), React.createElement(\"form\", {\n      onSubmit: this.handlFormSubmit,\n      encType: \"multipart/form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group has-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      required: true,\n      type: \"text\",\n      className: \"form-control\",\n      name: \"email\",\n      onChange: this.handleChange,\n      placeholder: \"Email or Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"glyphicon glyphicon-envelope form-control-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xs-4 pull-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block btn-flat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Send\"))))));\n  }\n\n}\n\n;\n\nconst state = (state, ownProps = {}) => {\n  return {\n    resetPwd: state.resetPwd.resetPwd,\n    loginUser: state.loginUser.authenticated,\n    location: state.location\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    navigateTo: location => {\n      dispatch(push(location));\n    },\n    onResetPwdUser: data => dispatch(ResetPwdUser(data))\n  };\n};\n\nexport default connect(state, mapDispatchToProps)(ResetPwd);","map":{"version":3,"sources":["/usr/src/app/src/components/pages/ResetPwd/ResetPwd.js"],"names":["React","Link","connect","push","ResetPwdUser","ToastContainer","customNotification","require","ResetPwd","Component","constructor","props","state","email","handleChange","bind","handlFormSubmit","e","preventDefault","onResetPwdUser","event","target","value","type","checked","name","setState","UNSAFE_componentWillReceiveProps","nextProps","resetPwd","code","fireNotification","msg","render","navigateTo","ownProps","loginUser","authenticated","location","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { push } from \"react-router-redux\";\nimport { ResetPwdUser } from \"../../../store/actions/UsersActions/ResetPwdAction\";\nimport { ToastContainer } from 'react-toastify';\nconst customNotification = require('../utils/notification');\n\n\nclass ResetPwd extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            email: \"\",\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handlFormSubmit = this.handlFormSubmit.bind(this);\n    }\n\n    handlFormSubmit(e) {\n        e.preventDefault();\n        this.props.onResetPwdUser(this.state.email);\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (nextProps.resetPwd.code === 200)\n            customNotification.fireNotification(\"success\", nextProps.resetPwd.msg)\n        if (nextProps.resetPwd !== \"\" && nextProps.resetPwd.code === 205)\n            customNotification.fireNotification(\"warning\", nextProps.resetPwd.msg)\n        if (nextProps.resetPwd !== \"\" && nextProps.resetPwd.code === 500)\n            customNotification.fireNotification(\"error\", nextProps.resetPwd.msg)\n\n    }\n\n\n    render() {\n        return (\n            <div className=\"login-box\">\n                <ToastContainer />\n                <div className=\"login-logo\">\n                    <b>Forget password</b>\n                </div>\n                <div className=\"login-box-body\">\n                    <p className=\"login-box-msg\">Reinitialize your password\n                    <Link to=\"/login\" onClick={this.props.navigateTo.bind(this, '/login')}>\n                            <i className=\"fa fa-backward pull-left\"></i>\n                        </Link>Signup a new account</p>\n                    <form onSubmit={this.handlFormSubmit} encType=\"multipart/form-data\">\n                        <div className=\"form-group has-feedback\">\n                            <input required type=\"text\" className=\"form-control\" name=\"email\" onChange={this.handleChange} placeholder=\"Email or Username\" />\n                            <span className=\"glyphicon glyphicon-envelope form-control-feedback\"></span>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-xs-4 pull-right\">\n                                <button type=\"submit\" className=\"btn btn-primary btn-block btn-flat\">Send</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n};\n\nconst state = (state, ownProps = {}) => {\n    return {\n        resetPwd: state.resetPwd.resetPwd,\n        loginUser: state.loginUser.authenticated,\n        location: state.location,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        navigateTo: (location) => {\n            dispatch(push(location));\n        },\n        onResetPwdUser: (data) => dispatch(ResetPwdUser(data)),\n    }\n};\n\nexport default connect(state, mapDispatchToProps)(ResetPwd);"]},"metadata":{},"sourceType":"module"}