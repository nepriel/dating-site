{"ast":null,"code":"import _regeneratorRuntime from\"/home/abn/my-projects/matcha-42/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/abn/my-projects/matcha-42/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios/index\";import{GET_USER_NOTIFS}from'../ActionType';function userNotifes(token,userId,dispatch){axios.get(process.env.REACT_APP_API_URL+\"/users/notifs/\"+userId,{headers:{\"Authorization\":\"Bearer \"+token}}).then(function(results){dispatch({type:GET_USER_NOTIFS,payload:results.data});}).catch(function(err){dispatch({type:GET_USER_NOTIFS,payload:\"\"});});}export function GetuserNotifes(){var token=localStorage.getItem(\"token\");var userId=localStorage.getItem(\"userId\");return(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return userNotifes(token,userId,dispatch);case 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());};","map":{"version":3,"sources":["/home/abn/my-projects/matcha-42/frontend/src/store/actions/UsersActions/GetUserNotifiAction.js"],"names":["axios","GET_USER_NOTIFS","userNotifes","token","userId","dispatch","get","process","env","REACT_APP_API_URL","headers","then","results","type","payload","data","catch","err","GetuserNotifes","localStorage","getItem"],"mappings":"2TAAA,MAAOA,CAAAA,KAAP,KAAkB,aAAlB,CACA,OACIC,eADJ,KAEO,eAFP,CAIA,QAASC,CAAAA,WAAT,CAAqBC,KAArB,CAA4BC,MAA5B,CAAoCC,QAApC,CAA8C,CAC1CL,KAAK,CAACM,GAAN,CAAUC,OAAO,CAACC,GAAR,CAAYC,iBAAZ,CAAgC,gBAAhC,CAAmDL,MAA7D,CAAqE,CACjEM,OAAO,CAAE,CACL,gBAAiB,UAAYP,KADxB,CADwD,CAArE,EAKKQ,IALL,CAKU,SAAAC,OAAO,CAAI,CACbP,QAAQ,CAAC,CACLQ,IAAI,CAAEZ,eADD,CAELa,OAAO,CAAEF,OAAO,CAACG,IAFZ,CAAD,CAAR,CAIH,CAVL,EAWKC,KAXL,CAWW,SAAAC,GAAG,CAAI,CACVZ,QAAQ,CAAC,CACLQ,IAAI,CAAEZ,eADD,CAELa,OAAO,CAAE,EAFJ,CAAD,CAAR,CAIH,CAhBL,EAiBH,CAED,MAAO,SAASI,CAAAA,cAAT,EAA0B,CAC7B,GAAMf,CAAAA,KAAK,CAAGgB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CACA,GAAMhB,CAAAA,MAAM,CAAGe,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAf,CAEA,gGAAO,iBAAgBf,QAAhB,wIACGH,CAAAA,WAAW,CAACC,KAAD,CAAQC,MAAR,CAAgBC,QAAhB,CADd,uDAAP,gEAGH","sourcesContent":["import axios from \"axios/index\";\nimport {\n    GET_USER_NOTIFS,\n} from '../ActionType';\n\nfunction userNotifes(token, userId, dispatch) {\n    axios.get(process.env.REACT_APP_API_URL + \"/users/notifs/\" + userId, {\n        headers: {\n            \"Authorization\": `Bearer ` + token\n        }\n    })\n        .then(results => {\n            dispatch({\n                type: GET_USER_NOTIFS,\n                payload: results.data,\n            })\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_USER_NOTIFS,\n                payload: \"\",\n            })\n        });\n}\n\nexport function GetuserNotifes() {\n    const token = localStorage.getItem(\"token\");\n    const userId = localStorage.getItem(\"userId\");\n\n    return async function (dispatch) {\n        await userNotifes(token, userId, dispatch)\n    }\n};"]},"metadata":{},"sourceType":"module"}